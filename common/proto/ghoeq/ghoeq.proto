syntax = "proto3";

option go_package = "github.com/nomoresecretz/ghoeq/common/proto/ghoeq";
//import "google/protobuf/DateTime.proto";

package ghoeq;

service BackendServer {
    rpc ListSources (ListRequest) returns (ListSourcesResponse) {}
    rpc ListSession (ListRequest) returns (ListSessionResponse) {}
    rpc ListStreams (ListStreamRequest) returns (ListStreamsResponse) {}
    rpc ListClients (ListClientRequest) returns (ListClientsResponse) {}
    rpc ModifySession (ModifySessionRequest) returns (SessionResponse) {}
    rpc AttachSessionRaw(AttachSessionRequest) returns (stream APPacket) {}
    rpc AttachClient(AttachClientRequest) returns (stream ClientUpdate) {}
    rpc AttachStreamRaw(AttachStreamRequest) returns (stream APPacket) {} // Simply a stream of decrypted / decompressed opcode + data packets
    rpc AttachStreamStruct(AttachStreamRequest) returns (stream ClientPacket) {} // Normalized proper data packets - long term plan once backend can properly deseralize
}

message AttachClientRequest {
    string client_id = 1;
}

message AttachSessionRequest {
    string session_id = 1;
}

message ClientUpdate {
    repeated Stream streams = 1;
    Client client = 2; // Offered on first avail
}

message ListStreamRequest {
    string session_id = 1;
    string stream_id = 2;
}

message ListClientRequest {
    string id = 1;
    string server_name = 2;
    string character_name = 3;
}

message ListRequest {
    string id = 1;
}

message ListStreamsResponse {
    repeated Stream streams = 1;
}

message ListClientsResponse {
    repeated GameStream clients = 1;
}

message SessionResponse {}

message AttachStreamRequest {
    string id = 1; // Start pulling a specific stream, or 0 for first avaliable if one or none.
    uint64 seq = 2; // Used for resume from previous sequence number. Not implmented yet.
    string session_id = 3;
}

message ListSourcesResponse {
    repeated Source sources = 1;
}

message ListSessionResponse {
    repeated Session sessions = 1;
}

message ModifySessionRequest {
    repeated ModifyRequest mods = 1;
    string nonce = 2;
}

message ModifyRequest {
    uint32 id = 1;
    State state = 2;
    string source = 3;
}

message Session {
    string id = 1;
    string source = 2; //Interface / PacketCapture etc
}

message Source {
    string id = 1;
    string description = 2;
}

message GameStream {
    uint32 id = 1;
    //google.protobuf.DateTime first_seen = 2;
    Client client = 3;
    repeated Stream sessions = 4;
}

message Client {
    string id = 1;
    string address = 2;
    string server_name = 3;
    string character_name = 4;
}

message Stream {
    string id = 1;
    string port = 2;
    string peer_address = 3;
    string peer_port = 4;
    PeerType type = 5;
    string address = 6;
    Direction direction = 7;
    Session session = 8;
}

enum State {
    STATE_UNKNOWN = 0;
    STATE_START = 1;
    STATE_STOP = 2;
}

message APPacket {
    uint64 seq = 1;
    uint32 op_code = 2;
    bytes data = 3;
    reserved 4; //deprecated
    string stream_id = 5;
}

message ClientPacket {}

enum PeerType {
    PEER_UNKNOWN = 0;
    PEER_LOGIN = 1;
    PEER_WORLD = 2;
    PEER_ZONE = 3;
    PEER_CHAT = 4;
}

enum Direction {
    DIR_UNKNOWN = 0;
    DIR_CLIENT_TO_SERVER = 1;
    DIR_SERVER_TO_CLIENT = 2;
}